<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- Enable annotation configuration -->
	<context:annotation-config />

	<!-- Scan sample packages for Spring annotations -->
	<context:component-scan base-package="com.active.dao" />
	<context:component-scan base-package="com.active.security" />
	<context:component-scan base-package="com.active.service" />

	<!-- Spring AOP auto-proxy creation (required to support Shiro annotations) -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/ams_shiro" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Transaction support beans -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven />

	<!-- Shiro's main business-tier object for web-enabled applications (use 
		org.apache.shiro.web.mgt.DefaultWebSecurityManager instead when there is 
		no web environment) -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- Single realm app (realm configured next, below). If you have multiple 
			realms, use the 'realms' property instead. -->
		<property name="realm" ref="sampleRealm" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>

	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="sessionIdUrlRewritingEnabled" value="false" />
	</bean>

	<!-- Post processor that automatically invokes init() and destroy() methods -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- Define the Shiro Filter here (as a FactoryBean) instead of directly 
		in web.xml - web.xml uses the DelegatingFilterProxy to access this bean. 
		This allows us to wire things with more control as well utilize nice Spring 
		things such as PropertiesPlaceholderConfigurer and abstract beans or anything 
		else we might need: -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/s/login" />
		<property name="successUrl" value="/s/home" />
		<property name="unauthorizedUrl" value="/unauthorized" />
		<!-- The 'filters' property is usually not necessary unless performing 
			an override, which we want to do here (make authc point to a PassthruAuthenticationFilter 
			instead of the default FormAuthenticationFilter: -->
		<property name="filters">
			<util:map>
				<entry key="authc">
					<bean
						class="org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter" />
				</entry>
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/s/signup = anon
				/s/manageUsers = perms[user:manage]
				/s/** = authc
			</value>
		</property>
	</bean>

</beans>
